<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>61.0</apiVersion>
    <assignments>
        <name>newEntitlementFullYear</name>
        <label>newEntitlementFullYear</label>
        <locationX>50</locationX>
        <locationY>468</locationY>
        <assignmentItems>
            <assignToReference>newEntitlementRecord.Is_recurring__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>newEntitlementRecord.Account__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Account__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>newEntitlementRecord.EntitledHoursUsed__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <numberValue>0.0</numberValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>newEntitlementRecord.EntitledHoursAlreadyUsed__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <numberValue>0.0</numberValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>newEntitlementRecord.EntitledHours__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <numberValue>120.0</numberValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>newEntitlementRecord.ToDate__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>add1YearEnd31DecemberToDate</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>newEntitlementRecord.FromDate__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>add1YearStart1JanuaryFromDate</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>newEntitlementRecord.Type__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Type__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>newEntitlements</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>newEntitlementRecord</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>existingEntitlements</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>removeNewEntitlementToAvoidOverlap2</name>
        <label>removeNewEntitlementToAvoidOverlap</label>
        <locationX>138</locationX>
        <locationY>792</locationY>
        <assignmentItems>
            <assignToReference>newEntitlements</assignToReference>
            <operator>RemoveAll</operator>
            <value>
                <elementReference>newEntitlementRecord</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>existingEntitlements</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>checkForOverlap</name>
        <label>checkForOverlap</label>
        <locationX>270</locationX>
        <locationY>684</locationY>
        <defaultConnector>
            <targetReference>existingEntitlements</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>hasOverlap</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>existingEntitlements.Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>newEntitlementRecord.Type__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>existingEntitlements.FromDate__c</leftValueReference>
                <operator>LessThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>newEntitlementRecord.ToDate__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>existingEntitlements.ToDate__c</leftValueReference>
                <operator>GreaterThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>newEntitlementRecord.FromDate__c</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>removeNewEntitlementToAvoidOverlap2</targetReference>
            </connector>
            <label>hasOverlap</label>
        </rules>
    </decisions>
    <decisions>
        <name>checkIfDead</name>
        <label>checkIfDead</label>
        <locationX>182</locationX>
        <locationY>360</locationY>
        <defaultConnector>
            <targetReference>updateEntitlementWhenDead</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>isNotDeadCheck2</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Account__r.CRM_Person__r.INT_IsDeceased__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>newEntitlementFullYear</targetReference>
            </connector>
            <label>isNotDead</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <formulas>
        <name>add1YearEnd31DecemberToDate</name>
        <dataType>Date</dataType>
        <expression>DATE(
            YEAR({!$Record.ToDate__c}) + 1,
            12,
            31
            )</expression>
    </formulas>
    <formulas>
        <name>add1YearStart1JanuaryFromDate</name>
        <dataType>Date</dataType>
        <expression>DATE(
            YEAR({!$Record.FromDate__c}) + 1,
            1,
            1
            )</expression>
    </formulas>
    <interviewLabel>HOT LOS Recurring Entitlement2 {!$Flow.CurrentDateTime}</interviewLabel>
    <label>HOT LOS Recurring Entitlement2</label>
    <loops>
        <name>existingEntitlements</name>
        <label>existingEntitlements</label>
        <locationX>50</locationX>
        <locationY>576</locationY>
        <collectionReference>getOtherEntitlements</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>checkForOverlap</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>createEntitlementRecords</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>createEntitlementRecords</name>
        <label>createEntitlementRecords</label>
        <locationX>50</locationX>
        <locationY>1068</locationY>
        <connector>
            <targetReference>updateExistingEntitlements</targetReference>
        </connector>
        <inputReference>newEntitlements</inputReference>
    </recordCreates>
    <recordLookups>
        <name>getOtherEntitlements</name>
        <label>getOtherEntitlements</label>
        <locationX>182</locationX>
        <locationY>252</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>checkIfDead</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Account__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Account__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>HOT_Entitlement__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>updateEntitlementWhenDead</name>
        <label>updateEntitlementWhenDead</label>
        <locationX>314</locationX>
        <locationY>468</locationY>
        <inputAssignments>
            <field>Is_recurring__c</field>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>updateExistingEntitlements</name>
        <label>updateExistingEntitlements</label>
        <locationX>50</locationX>
        <locationY>1176</locationY>
        <inputAssignments>
            <field>HasBeenRecurred__c</field>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <start>
        <locationX>56</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>getOtherEntitlements</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AboutToExpire__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>HasBeenRecurred__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Type__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Dagligliv</stringValue>
            </value>
        </filters>
        <filters>
            <field>Is_recurring__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <object>HOT_Entitlement__c</object>
        <schedule>
            <frequency>Daily</frequency>
            <startDate>2024-06-21</startDate>
            <startTime>11:45:00.000Z</startTime>
        </schedule>
        <triggerType>Scheduled</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>accountIds</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Account</objectType>
    </variables>
    <variables>
        <name>accountIdsText</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>entitlementsToUpdate</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>HOT_Entitlement__c</objectType>
    </variables>
    <variables>
        <name>newEntitlementRecord</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>HOT_Entitlement__c</objectType>
    </variables>
    <variables>
        <name>newEntitlements</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>HOT_Entitlement__c</objectType>
    </variables>
</Flow>
